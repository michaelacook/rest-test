{"version":3,"sources":["components/RequestPane.js","modules/HTTPRequest.js","App.js","reportWebVitals.js","index.js"],"names":["HTTPVerbDropdownOptions","key","text","value","RequestPane","request","requests","setRequests","index","deleteRequest","useState","location","setLocation","verb","setVerb","saveRequest","newState","splice","useEffect","toLowerCase","Fragment","Header","as","color","title","Form","Group","inline","Field","width","Input","fluid","onChange","e","handleLocationChange","target","label","Dropdown","options","data","handleVerbChange","labelPosition","placeholder","Button","onClick","icon","HTTPRequest","headers","mode","cache","body","authCredentials","credentials","this","_response","_authCredentials","_credentials","_abortController","AbortController","_location","_verb","toUpperCase","_mode","_cache","_title","_body","JSON","stringify","_headers","Headers","append","Array","isArray","forEach","header","Error","btoa","email","password","Object","keys","length","_buildBasicAuthHeader","_addBasicAuthHeader","method","a","_buildRequestOptions","fetch","res","json","abort","includes","hdrs","parse","App","activeRequest","setActiveRequest","activeTab","setActiveTab","Grid","celled","padded","style","height","Row","Column","size","newRequest","Icon","name","marginLeft","iconPosition","Menu","tabular","map","i","Item","active","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3bf9dad8.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { Button, Dropdown, Form, Header, Input } from \"semantic-ui-react\"\n\nconst HTTPVerbDropdownOptions = [\n  { key: \"get\", text: \"GET\", value: \"get\" },\n  { key: \"post\", text: \"POST\", value: \"post\" },\n  { key: \"put\", text: \"PUT\", value: \"put\" },\n  { key: \"path\", text: \"PATCH\", value: \"patch\" },\n  { key: \"delete\", text: \"DELETE\", value: \"delete\" },\n  { key: \"options\", text: \"OPTIONS\", value: \"options\" },\n  { key: \"trace\", text: \"TRACE\", value: \"trace\" },\n]\n\nfunction RequestPane({ request, requests, setRequests, index, deleteRequest }) {\n  const [location, setLocation] = useState(request.location)\n  const [verb, setVerb] = useState(request.verb)\n\n  useEffect(() => {\n    setLocation(request.location)\n    setVerb(request.verb.toLowerCase())\n  }, [request])\n\n  function saveRequest() {\n    const newState = [...requests]\n    newState.splice(index, 1, request)\n    setRequests(newState)\n  }\n\n  function handleLocationChange({ value }) {\n    setLocation(value)\n    request.location = value\n    saveRequest()\n  }\n\n  function handleVerbChange({ value }) {\n    setVerb(value)\n    request.verb = value\n    saveRequest()\n  }\n\n  return (\n    <React.Fragment>\n      <Header as=\"h5\" color=\"grey\">\n        {request.title} Request\n      </Header>\n      <Form>\n        <Form.Group inline>\n          <Form.Field width={13}>\n            <Input\n              fluid\n              onChange={(e) => handleLocationChange(e.target)}\n              value={location || \"\"}\n              label={\n                <Dropdown\n                  value={verb}\n                  options={HTTPVerbDropdownOptions}\n                  onChange={(e, data) => handleVerbChange(data)}\n                />\n              }\n              labelPosition=\"left\"\n              placeholder=\"Enter request URL\"\n            />\n          </Form.Field>\n          <Form.Field>\n            <Button color=\"linkedin\">Send</Button>\n          </Form.Field>\n          <Form.Field>\n            <Button onClick={() => deleteRequest(index)} icon=\"trash\" />\n          </Form.Field>\n        </Form.Group>\n      </Form>\n    </React.Fragment>\n  )\n}\n\nexport default RequestPane\n","class HTTPRequest {\n  /**\n   * @param {String} location - resource URI\n   * @param {String} verb - HTTP verb\n   * @param {Array || String} headers - Request header(s)\n   * @param {String} mode - Request mode (no-cors, *cors, same-origin)\n   * @param {String} cache - Request cache option (no-cache, reload, force-cache, only-if-cached)\n   * @param {Object} body - HTTP payload\n   * @param {Object} authCredentials - object containing email and password keys for Basic Auth header\n   * @param {String} credentials - request credentials (include, *same-origin, omit)\n   */\n  constructor(\n    location = null,\n    verb = \"GET\",\n    headers = \"application/json; charset=utf-8\",\n    mode = \"cors\",\n    cache = null,\n    body = null,\n    authCredentials = null,\n    credentials = \"omit\"\n  ) {\n    this._response = null\n    this._authCredentials = authCredentials\n    this._credentials = credentials\n    this._abortController = new AbortController()\n    this._location = location\n    this._verb = verb.toUpperCase()\n    this._mode = mode\n    this._cache = cache\n    this._title = \"Untitled\"\n    this._body = JSON.stringify(body)\n    this._headers = new Headers()\n    if (typeof headers === \"string\") {\n      this._headers.append(\"Content-Type\", headers)\n    } else if (Array.isArray(headers)) {\n      headers.forEach((header) => {\n        this._headers.append(\"Content-Type\", header)\n      })\n    }\n  }\n\n  /**\n   * Public\n   * Append a custom header to headers private property\n   * @param {String} header - custom header text\n   */\n  addCustomHeader(header) {\n    if (!header) {\n      throw new Error(\"Adding custom header requires header text.\")\n    }\n    if (!this._headers) {\n      throw new Error(\"Headers object does not exist.\")\n    }\n    this._headers.append(\"X-Custom-Header\", header)\n  }\n\n  /**\n   * Private\n   * Construct Basic Auth header from private credentials\n   * @return {String}\n   */\n  _buildBasicAuthHeader() {\n    return (\n      \"Basic \" +\n      btoa(`${this._authCredentials.email}:${this._authCredentials.password}`)\n    )\n  }\n\n  /**\n   * Private\n   * Append Basic Auth header to headers private property\n   */\n  _addBasicAuthHeader() {\n    if (!this._authCredentials || !Object.keys(this._authCredentials).length) {\n      throw new Error(\n        \"Setting Basic Auth credentials requires a credentials object with email and password keys.\"\n      )\n    } else if (\n      !this._authCredentials.email ||\n      !this._authCredentials.password\n    ) {\n      throw new Error(\"Credentials object requires email and password keys.\")\n    }\n    this._headers.append(\"Authorization\", this._buildBasicAuthHeader())\n  }\n\n  /**\n   * Private\n   * Build an init object for a fetch request\n   * If request uses Basic Auth but does not have the Authorization header, add it\n   * @return {Object}\n   */\n  _buildRequestOptions() {\n    if (this._authCredentials && !this._headers[\"Authorization\"]) {\n      this._addBasicAuthHeader()\n    }\n    const options = {\n      method: this._verb,\n      mode: this._mode,\n      cache: this._cache || \"no-cache\",\n      headers: this._headers,\n      credentials: this._credentials,\n      // signal: this._abortController.signal,\n    }\n    if (this._body) {\n      options[\"body\"] = this._body\n    }\n    return options\n  }\n\n  /**\n   * Public\n   * Call fetch passing location and options\n   * Set response private property to parsed response object\n   */\n  async send() {\n    const options = this._buildRequestOptions()\n    const res = await fetch(this._location, options)\n    this._response = await res.json()\n  }\n\n  /**\n   * Public\n   * Cancel a request if it has not resolved\n   * Reset the abortController private property\n   * @return {String} cancel message\n   */\n  cancel() {\n    this._abortController.abort()\n    this._abortController = new AbortController()\n    return \"Request cancelled.\"\n  }\n\n  set title(title) {\n    this._title = title\n  }\n\n  get title() {\n    return this._title\n  }\n\n  /**\n   * Validate location URI before setting location private property\n   */\n  set location(location) {\n    this._location = location\n  }\n\n  get location() {\n    return this._location\n  }\n\n  /**\n   * Validate HTTP verb before setting verb private property\n   */\n  set verb(verb) {\n    const verbs = [\n      \"connect\",\n      \"get\",\n      \"post\",\n      \"put\",\n      \"patch\",\n      \"delete\",\n      \"head\",\n      \"trace\",\n      \"options\",\n    ]\n    if (!verbs.includes(verb.toLowerCase())) {\n      throw new Error(\"Invalid HTTP verb.\")\n    }\n    this._verb = verb.toUpperCase()\n  }\n\n  get verb() {\n    return this._verb\n  }\n\n  /**\n   * Set headers private property\n   * @param {Array} headers - array of headers\n   */\n  set headers(headers) {\n    if (!headers.length) {\n      throw new Error(\"Setting headers property requires headers array.\")\n    }\n    const hdrs = new Headers()\n    headers.forEach((header) => {\n      hdrs.append(\"Content-Type\", header)\n    })\n    if (!this._authCredentials || !Object.keys(this._authCredentials).length) {\n      throw new Error(\n        \"Setting Basic Auth credentials requires a credentials object with email and password keys.\"\n      )\n    } else if (\n      !this._authCredentials.email ||\n      !this._authCredentials.password\n    ) {\n      throw new Error(\"Credentials object requires email and password keys.\")\n    }\n    hdrs.append(\n      \"Authorization\",\n      \"Basic \" +\n        btoa(`${this._authCredentials.email}:${this._authCredentials.password}`)\n    )\n    this._headers = hdrs\n  }\n\n  get headers() {\n    return this._headers\n  }\n\n  set authCredentials({ email, password }) {\n    if (!email || !password) {\n      throw new Error(\n        \"Auth credentials requires object with email and password keys\"\n      )\n    }\n    this._authCredentials = { email, password }\n  }\n\n  get authCredentials() {\n    return `email: ${this._authCredentials.email}, password: ${this._authCredentials.password}`\n  }\n\n  set cache(cache) {\n    if (typeof cache !== \"string\") {\n      throw new Error(\"Cache must be a string.\")\n    }\n    this._cache = cache\n  }\n\n  get cache() {\n    return this._cache\n  }\n\n  setBody(body) {\n    if (typeof body !== \"object\") {\n      throw new Error(\"HTTP payload must be a JavaScript object or array\")\n    }\n    this._body = JSON.stringify(body)\n  }\n\n  get rawBody() {\n    return JSON.parse(this._body)\n  }\n\n  get body() {\n    return this._body\n  }\n\n  set mode(mode) {\n    if (typeof mode !== \"string\") {\n      throw new Error(\"Mode must be a string.\")\n    }\n    this._mode = mode\n  }\n\n  get mode() {\n    return this._mode\n  }\n\n  set credentials(credentials) {\n    if (typeof credentials !== \"string\") {\n      throw new Error(\"Credentials must be a string.\")\n    }\n    this._credentials = credentials\n  }\n}\n\nexport default HTTPRequest\n","import React, { useState, useEffect } from \"react\"\nimport { Button, Form, Grid, Icon, Menu, Tab } from \"semantic-ui-react\"\nimport RequestPane from \"./components/RequestPane\"\nimport HTTPRequest from \"./modules/HTTPRequest.js\"\n\nfunction App() {\n  const [requests, setRequests] = useState([])\n  const [activeRequest, setActiveRequest] = useState(null)\n  const [activeTab, setActiveTab] = useState(-1)\n\n  useEffect(() => {\n    setActiveRequest(activeTab > -1 ? requests[activeTab] : null)\n    if (requests.length === 1) {\n      setActiveTab(0)\n    }\n  }, [activeTab, requests])\n\n  function addRequest() {\n    const newRequest = new HTTPRequest()\n    newRequest.index = activeTab + 1\n    setRequests([...requests, newRequest])\n    setActiveTab(activeTab + 1)\n  }\n\n  function deleteRequest(index) {\n    if (requests.length === 1) {\n      setRequests([])\n      setActiveTab(-1)\n      return\n    }\n    const newState = [...requests]\n    newState.splice(index, 1)\n    setRequests(newState)\n    setActiveTab(activeTab > -1 ? activeTab - 1 : -1)\n  }\n\n  return (\n    <Grid celled padded style={{ height: \"100vh\" }}>\n      <Grid.Row color=\"black\" style={{ height: \"6%\" }}>\n        <Grid.Column>\n          <Button size=\"tiny\" color=\"orange\" onClick={addRequest}>\n            <Icon name=\"plus\" />\n            New\n          </Button>\n          <Button size=\"tiny\" style={{ marginLeft: \"7px\" }}>\n            Import\n          </Button>\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row style={{ height: \"94%\" }}>\n        <Grid.Column width={2}>\n          <Form>\n            <Form.Input\n              icon=\"search\"\n              iconPosition=\"left\"\n              placeholder=\"Filter\"\n            />\n          </Form>\n        </Grid.Column>\n        <Grid.Column width={14}>\n          {requests.length ? (\n            <Menu tabular>\n              {requests.map((request, i) => (\n                <Menu.Item\n                  key={i}\n                  name={request.title}\n                  active={i === activeTab}\n                  onClick={() => {\n                    setActiveTab(i)\n                    setActiveRequest(requests[i])\n                  }}\n                />\n              ))}\n            </Menu>\n          ) : null}\n          {activeRequest ? (\n            <RequestPane\n              request={activeRequest}\n              requests={requests}\n              setRequests={setRequests}\n              index={activeRequest.index}\n              deleteRequest={deleteRequest}\n            />\n          ) : null}\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  )\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport \"semantic-ui-css/semantic.min.css\"\nimport \"./App.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}